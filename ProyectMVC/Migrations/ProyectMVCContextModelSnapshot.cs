// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ProyectMVC.Models;
using System;

namespace ProyectMVC.Migrations
{
    [DbContext(typeof(ProyectMVCContext))]
    partial class ProyectMVCContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("ProyectMVC.Models.ClienteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Direccion");

                    b.Property<string>("Juridica");

                    b.Property<string>("Nombre");

                    b.Property<string>("Numero");

                    b.Property<int>("SectorId");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ProyectMVC.Models.ContactoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido");

                    b.Property<int>("ClienteId");

                    b.Property<string>("Correo");

                    b.Property<string>("Nombre");

                    b.Property<string>("Numero");

                    b.Property<string>("Puesto");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Contacto");
                });

            modelBuilder.Entity("ProyectMVC.Models.ReunionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClienteId");

                    b.Property<DateTime>("Dia");

                    b.Property<string>("Titulo");

                    b.Property<int>("UsuarioId");

                    b.Property<bool>("presencial");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reunion");
                });

            modelBuilder.Entity("ProyectMVC.Models.SectorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Sector");
                });

            modelBuilder.Entity("ProyectMVC.Models.SupportModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClienteId");

                    b.Property<string>("Detalle");

                    b.Property<string>("Estado");

                    b.Property<string>("Problema");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("SupportModel");
                });

            modelBuilder.Entity("ProyectMVC.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido");

                    b.Property<string>("Nombre");

                    b.Property<string>("PuestoTrabajo");

                    b.Property<string>("cedula");

                    b.Property<string>("contrasena");

                    b.Property<bool>("privilegios");

                    b.Property<string>("telefono");

                    b.HasKey("Id");

                    b.ToTable("UsuarioModel");
                });

            modelBuilder.Entity("ProyectMVC.Models.ClienteModel", b =>
                {
                    b.HasOne("ProyectMVC.Models.SectorModel", "Sector")
                        .WithMany()
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectMVC.Models.ContactoModel", b =>
                {
                    b.HasOne("ProyectMVC.Models.ClienteModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectMVC.Models.ReunionModel", b =>
                {
                    b.HasOne("ProyectMVC.Models.ClienteModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectMVC.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectMVC.Models.SupportModel", b =>
                {
                    b.HasOne("ProyectMVC.Models.ClienteModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
